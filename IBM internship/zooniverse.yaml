swagger: "2.0"
info:
  description: "This is a sample Music server."
  version: "1.0.0"
  title: "Swagger Music App"
  contact:
    email: "apiteam@swagger.io"
host: "music.swagger.io"
basePath: "/v2"
tags:
- name: "Audio"
  description: "Everything about audios"
- name: "Volunteer"
  description: "Everything about Volunteers"
- name: "Video"
  description: "Everything about videos"
schemes:
- "https"
- "http"
paths:
  /videos:
    post:
      tags:
      - "Video"
      summary: "Add a new Video to the app"
      description: ""
      operationId: "addVideo"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Video object that needs to be added to the app"
        required: true
        schema:
          $ref: '#/definitions/Video'
      responses:
        "405":
          description: "Invalid input"
  /videos/{videoID}:
    get:
      tags:
      - "Video"
      summary: "Finds videos by ID"
      operationId: "getVideo"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "videoID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Video'
        "400":
          description: "Invalid status value"
    put:
      tags:
      - "Video"
      summary: "Rank the videos"
      description: ""
      operationId: "updateRank"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "videoID"
        description: "Find video by VideoID"
        required: true
        type : "string"
      - in: "body"
        name: "rank"
        description: "Rank object that needs to be added to the app"
        required: true
        schema:
          $ref: '#/definitions/Video'
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Video not found"
        "405":
          description: "Validation exception"
    delete:
      tags:
      - "Video"
      summary: "Deletes a Video"
      description: ""
      operationId: "delVideo"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "videoID"
        in: "path"
        description: "Video Id"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Video not found"
  /videos/segments:
    post:
      tags:
      - "Video"
      summary: "Add a new video segment to the app"
      description: ""
      operationId: "addSegment"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "SegmentID"
        description: "video segment object that needs to be added to the app"
        required: true
        schema:
          $ref: '#/definitions/Segment'
      responses:
        "405":
          description: "Invalid input"
  /videos/{videoID}/segments/{segmentID}:
    get:
      tags:
      - "Video"
      summary: "Finds videos by videoID then find the segments by segmentID"
      operationId: "getsegment"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "videoID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "segmentID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Segment'
        "400":
          description: "Invalid status value"
  /videos/images:
    get:
      tags:
      - "Video"
      summary: "Finds images in videos by image content"
      operationId: "getImage"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "imagecontent"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Segment'
        "400":
          description: "Invalid status value"
  /audios:
    post:
      tags:
      - "Audio"
      summary: "Add a new audio to the app"
      description: ""
      operationId: "addAudio"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "audio object that needs to be added to the app"
        required: true
        schema:
          $ref: '#/definitions/Video'
      responses:
        "405":
          description: "Invalid input"
  /audios/{audiofileID}:
    get:
      tags:
      - "Audio"
      summary: "Finds audio by audio file ID"
      operationId: "getAudio"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "audiofileID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Video'
        "400":
          description: "Invalid status value"
    put:
      tags:
      - "Audio"
      summary: "Update an existing audio"
      description: ""
      operationId: "updateAudio"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "audiofileID"
        description: "audio object that needs to be updated in the app"
        required: true
        type : "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Audio not found"
        "405":
          description: "Validation exception"
  /news:
    post:
      tags:
      - "Video"
      summary: "Add a new news to the app"
      description: ""
      operationId: "addNews"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "News object that needs to be added to the app"
        required: true
        schema:
          $ref: '#/definitions/Video'
      responses:
        "405":
          description: "Invalid input"
  /news/{anykeysearch}:
    get:
      tags:
      - "Video"
      summary: "Finds news by any key search"
      operationId: "getNews"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "anykeysearch"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Segment'
        "400":
          description: "Invalid status value"        
  /volunteers:
    get:
      tags:
      - "Volunteer"
      summary: "Finds Volunteer by type of the volunteer"
      operationId: "getVolunteer"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "VolunteerType"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Volunteer'
        "400":
          description: "Invalid status value"
  /videos/{videoID}/comments:
    post:
      tags:
      - "Audio"
      summary: "Add a new comment to a video in the app"
      description: ""
      operationId: "addComment"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "videoID"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "comment object that needs to be added to the video in the app"
        required: true
        schema:
          $ref: '#/definitions/Video'
      responses:
        "405":
          description: "Invalid input"
  /videos/{videoID}/comments{commentID}:
    get:
      tags:
      - "Video"
      summary: "Finds video and comment by videoId and commentId respecively"
      operationId: "getComment"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "videoID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "commentID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Video'
        "400":
          description: "Invalid status value"
  /videos/{videoID}/authors:
    post:
      tags:
      - "Video"
      summary: "Add a author to a video in the app"
      description: ""
      operationId: "addAuthor"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "path"
        name: "videoID"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Authour object that needs to be added to the video"
        required: true
        schema:
          $ref: '#/definitions/Video'
      responses:
        "405":
          description: "Invalid input" 
  /videos/{videoID}/authors/{authorsID}:
    get:
      tags:
      - "Video"
      summary: "Finds video then author by videoId and authorId respectively"
      operationId: "getAuthor"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "videoID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      - name: "authorsID"
        in: "path"
        description: "Status values that need to be considered for filter"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Segment'
        "400":
          description: "Invalid status value"
definitions:
  Video:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
        # format: "int64"
      name:
        type: "string"
        example: "song1"
      tag: 
        type: "string"
        example: "news"
      comment: 
        type: "string"
        example: "any string"
      rank:
        type: "integer"
        format: "int64"
    xml:
      name: "Video"
  Segment:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
        # format: "int64"
      # category:
      #   $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "segment_name"
      tag: 
        type: "string"
        example: "news"
      comment: 
        type: "string"
        example: "any string"
    xml:
      name: "Segment"
  News:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
        # format: "int64"
      # category:
      #   $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "some_name"
      tag: 
        type: "string"
        example: "news"
      comment: 
        type: "string"
        example: "any string"
    xml:
      name: "News"
  Volunteer:
    type: "object"
    required:
    - "name"
    properties:
      type:
        type: "string"
        # format: "int64"
      # category:
      #   $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "volunteer1"
      experience: 
        type: "string"
        example: "fresher"
      availability: 
        type: "string"
        example: "free/busy"
      communication:
        type: "string"
        example: "text/image/video"
      qualification:
        type: "string"
        example: "someQualification"
      comment:
        type: "string"
        example: "someComment"
    xml:
      name: "Volunteer"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"